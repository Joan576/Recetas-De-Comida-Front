{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Registro\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSubmit, [\"prevent\"])\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Nombre de Usuario:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Contenedor adicional \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.username = $event),\n    type: \"text\",\n    id: \"username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.username]])])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Correo Electrónico:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Contenedor adicional \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    type: \"email\",\n    id: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.email]])])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Contraseña:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Contenedor adicional \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n    type: \"password\",\n    id: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.password]])])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirmar Contraseña:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Contenedor adicional \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.confirmPassword = $event),\n    type: \"password\",\n    id: \"confirmPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.confirmPassword]])])]), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($setup.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mensaje de éxito \"), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Registrar\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","handleSubmit","for","_hoisted_2","_createCommentVNode","_cache","$event","form","username","type","id","required","_hoisted_3","email","_hoisted_4","password","_hoisted_5","confirmPassword","error","_hoisted_6","_toDisplayString","success","_hoisted_7"],"sources":["C:\\Users\\guett\\Desktop\\GitHub\\Recetas-De-Comida-Front\\Recetas-De-Comida-Front\\src\\components\\registerForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>Registro</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">Nombre de Usuario:</label>\r\n        <div style=\"text-align: center;\"> <!-- Contenedor adicional -->\r\n          <input v-model=\"form.username\" type=\"text\" id=\"username\" required />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"email\">Correo Electrónico:</label>\r\n        <div style=\"text-align: center;\"> <!-- Contenedor adicional -->\r\n          <input v-model=\"form.email\" type=\"email\" id=\"email\" required />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password\">Contraseña:</label>\r\n        <div style=\"text-align: center;\"> <!-- Contenedor adicional -->\r\n          <input v-model=\"form.password\" type=\"password\" id=\"password\" required />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"confirmPassword\">Confirmar Contraseña:</label>\r\n        <div style=\"text-align: center;\"> <!-- Contenedor adicional -->\r\n          <input v-model=\"form.confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n      <div v-if=\"success\" class=\"success\">{{ success }}</div> <!-- Mensaje de éxito -->\r\n\r\n      <button type=\"submit\">Registrar</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst form = ref({\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n});\r\n\r\nconst error = ref('');\r\nconst success = ref(''); // Variable para el mensaje de éxito\r\n\r\nconst handleSubmit = async () => {\r\n  // Validar que las contraseñas coincidan\r\n  if (form.value.password !== form.value.confirmPassword) {\r\n    error.value = 'Las contraseñas no coinciden!';\r\n    success.value = ''; // Limpiar mensaje de éxito\r\n    return;\r\n  }\r\n  \r\n  // Limpiar mensajes antes de enviar\r\n  error.value = '';\r\n  success.value = '';\r\n\r\n  try {\r\n    // Hacer la petición POST al backend\r\n    const response = await axios.post('http://localhost:4000/usuarios', {\r\n      username: form.value.username,\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n    });\r\n\r\n    // Manejar la respuesta exitosa\r\n    success.value = response.data.message; // Mostrar mensaje de éxito\r\n    form.value.username = ''; // Limpiar el formulario\r\n    form.value.email = '';\r\n    form.value.password = '';\r\n    form.value.confirmPassword = '';\r\n  } catch (err) {\r\n    // Manejar errores, como problemas con el servidor\r\n    console.error('Error registering user:', err);\r\n    if (err.response && err.response.data && err.response.data.message) {\r\n      error.value = err.response.data.message;\r\n    } else {\r\n      error.value = 'Hubo un error con el registro. Intenta de nuevo.';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  background-color: rgb(226, 226, 226);\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-image: url('https://imagenes.20minutos.es/files/image_1920_1080/uploads/imagenes/2023/01/02/surtido-de-tapas-espanolas.jpeg'); /* Cambia esto a la ruta de tu imagen */\r\n  background-size: cover; /* Asegura que la imagen cubra toda la página */\r\n  background-position: center; /* Centra la imagen */\r\n  background-repeat: no-repeat; /* Evita que la imagen se repita */\r\n  height: 100vh; /* Asegura que el body cubra toda la altura de la ventana */\r\n}\r\n\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-group {\r\n  margin: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block; /* Hace que la etiqueta ocupe toda la línea */\r\n  margin-bottom: 5px; /* Espacio entre la etiqueta y el input */\r\n  font-weight: bold; /* Hacer el texto más destacado */\r\n  text-align: left; /* Alinear etiquetas a la izquierda */\r\n}\r\n\r\nform div {\r\n  margin-bottom: 15px;\r\n}\r\n\r\ninput {\r\n  width: 100%; /* Input ocupa el 100% */\r\n  max-width: 380px; /* Ajusta el ancho máximo si es necesario */\r\n  padding: 10px; /* Espacio interno en los inputs */\r\n  border: 1px solid #ccc; /* Borde del input */\r\n  border-radius: 5px; /* Bordes redondeados */\r\n  display: block; /* Asegura que el input se comporte como bloque */\r\n  margin: 0 auto; /* Centra el input */\r\n}\r\n\r\n\r\ninput:focus {\r\n  border-color: #007BFF;\r\n  outline: none;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.success {\r\n  color: green;\r\n  margin-top: 10px;\r\n  font-size: 14px; /* Estilo para el mensaje de éxito */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EAKpBC,KAA2B,EAA3B;IAAA;EAAA;AAA2B;;EAO3BA,KAA2B,EAA3B;IAAA;EAAA;AAA2B;;EAO3BA,KAA2B,EAA3B;IAAA;EAAA;AAA2B;;EAO3BA,KAA2B,EAA3B;IAAA;EAAA;AAA2B;;EA3BxCC,GAAA;EAiCwBF,KAAK,EAAC;;;EAjC9BE,GAAA;EAkC0BF,KAAK,EAAC;;;uBAjC9BG,mBAAA,CAqCM,OArCNC,UAqCM,G,0BApCJC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAkCO;IAlCAC,QAAM,EAHjBC,cAAA,CAG2BC,MAAA,CAAAC,YAAY;MACjCJ,mBAAA,CAKM,c,0BAJJA,mBAAA,CAAgD;IAAzCK,GAAG,EAAC;EAAU,GAAC,oBAAkB,sBACxCL,mBAAA,CAEM,OAFNM,UAEM,GAF4BC,mBAAA,0BAA6B,E,gBAC7DP,mBAAA,CAAoE;IAP9E,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO0BN,MAAA,CAAAO,IAAI,CAACC,QAAQ,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAzCX,MAAA,CAAAO,IAAI,CAACC,QAAQ,E,OAIjCX,mBAAA,CAKM,c,0BAJJA,mBAAA,CAA8C;IAAvCK,GAAG,EAAC;EAAO,GAAC,qBAAmB,sBACtCL,mBAAA,CAEM,OAFNe,UAEM,GAF4BR,mBAAA,0BAA6B,E,gBAC7DP,mBAAA,CAA+D;IAdzE,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc0BN,MAAA,CAAAO,IAAI,CAACM,KAAK,GAAAP,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAApCX,MAAA,CAAAO,IAAI,CAACM,KAAK,E,OAI9BhB,mBAAA,CAKM,c,0BAJJA,mBAAA,CAAyC;IAAlCK,GAAG,EAAC;EAAU,GAAC,aAAW,sBACjCL,mBAAA,CAEM,OAFNiB,UAEM,GAF4BV,mBAAA,0BAA6B,E,gBAC7DP,mBAAA,CAAwE;IArBlF,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqB0BN,MAAA,CAAAO,IAAI,CAACQ,QAAQ,GAAAT,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA7CX,MAAA,CAAAO,IAAI,CAACQ,QAAQ,E,OAIjClB,mBAAA,CAKM,c,0BAJJA,mBAAA,CAA0D;IAAnDK,GAAG,EAAC;EAAiB,GAAC,uBAAqB,sBAClDL,mBAAA,CAEM,OAFNmB,UAEM,GAF4BZ,mBAAA,0BAA6B,E,gBAC7DP,mBAAA,CAAsF;IA5BhG,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4B0BN,MAAA,CAAAO,IAAI,CAACU,eAAe,GAAAX,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,iBAAiB;IAACC,QAAQ,EAAR;iDAA3DX,MAAA,CAAAO,IAAI,CAACU,eAAe,E,OAK7BjB,MAAA,CAAAkB,KAAK,I,cAAhBvB,mBAAA,CAAiD,OAAjDwB,UAAiD,EAAAC,gBAAA,CAAdpB,MAAA,CAAAkB,KAAK,oBAjC9Cd,mBAAA,gBAkCiBJ,MAAA,CAAAqB,OAAO,I,cAAlB1B,mBAAA,CAAuD,OAAvD2B,UAAuD,EAAAF,gBAAA,CAAhBpB,MAAA,CAAAqB,OAAO,oBAlCpDjB,mBAAA,gBAkC8DA,mBAAA,sBAAyB,E,0BAEjFP,mBAAA,CAAwC;IAAhCY,IAAI,EAAC;EAAQ,GAAC,WAAS,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}